Project         : Inactivity Monitor
Run Check Task  : Every 5 minutes
Rate-Limit      : 10/10s
Command Base    : inactive-monitor / imon

<================================>
Commands

enable                          --> Turn On/Off. WILL STAY OFF UNTIL PRIMARY ROLE &
                                    THRESHOLD IS SET!
threshold inactive <integer>    --> Set the threshold to when inactivity status is given
threshold kick <integer>        --> Set the threshold to kick after inactivity is set.
                                    MUST BE HIGHER THAN KICK THRESHOLD!
role <@role/string>             --> Set the role to use to mark inactive
ignore add <@user/@role>        --> Add Specified Users/Roles to whitelist
ignore remove <@user/@role>     --> Remove Whitelist Specified Users/Roles from whitelist
sendinvite                      --> DM Invite to user if kicked if they wish to return
list                            --> Count number of inactive
kick inactive                   --> Kick all inactive. MUST OBEY KICK THRESHOLD!
show                            --> Show Config
reset                           --> Reset Config

<================================>
InactivityManager

Dedicated Task  --> Run check & execute upon conditions met
void Start()    --> Start the task. Restart if need be
Constructor     --> Initialize variables

Interact w/ TimerManager? Maybe best to due to rate-limits. Requires model creation.

<================================>
ServerInactivity-DBModel

ulong   GuildId
bool    Enabled
int     InactiveThreshold
int     KickThreshold
bool    SendInvite
ulong   InactiveRole
List    UserActivityContainer
List    UserWhitelist
List    RoleWhitelist

<================================>
UserActivityContainer-DBModel

ulong   Id
ulong   UserId
Date    LastActive